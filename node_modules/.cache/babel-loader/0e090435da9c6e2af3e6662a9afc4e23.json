{"ast":null,"code":"import _classCallCheck from \"/Users/rebecca/Desktop/Interactive Art/responsive-art-canvas/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rebecca/Desktop/Interactive Art/responsive-art-canvas/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rebecca/Desktop/Interactive Art/responsive-art-canvas/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rebecca/Desktop/Interactive Art/responsive-art-canvas/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rebecca/Desktop/Interactive Art/responsive-art-canvas/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/rebecca/Desktop/Interactive Art/responsive-art-canvas/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/rebecca/Desktop/Interactive Art/responsive-art-canvas/src/App.js\";\nimport React from 'react';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.handleChange = function (e) {\n      var name = e.target.value;\n\n      _this.setState({\n        text: name\n      });\n\n      var ch = name.charAt(name.length - 1);\n      var w = _this.state.word;\n\n      if (ch == ' ') {\n        /*\n        this.setState((prevState)=>{\n          return {\n            colors: [...prevState, w]\n          }\n        })\n        */\n        _this.setState({\n          display: true\n        });\n\n        var top = Math.random(0, 1) * 600;\n        var left = Math.random(0, 1) * 500;\n        var width = Math.random(0, 1) * 600;\n        var height = Math.random(0, 1) * 1000;\n\n        _this.setState({\n          top: top,\n          left: left,\n          width: width,\n          height: height,\n          word: ''\n        });\n      } else {\n        w += ch;\n\n        _this.setState({\n          word: w\n        });\n      } //need to make sure that everything stays on the screen without scrolling down\n\n    };\n\n    _this.state = {\n      text: '',\n      word: '',\n      display: false,\n      //colors: Array(1000).fill(null),\n      //counter: 0,\n      top: 0,\n      left: 0\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"renderBox\",\n    value: function renderBox(word) {\n      var style = {\n        position: \"absolute\",\n        width: \"\".concat(this.state.width, \"px\"),\n        height: \"\".concat(this.state.height, \"px\"),\n        top: \"\".concat(this.state.top, \"px\"),\n        left: \"\".concat(this.state.left, \"px\") //actual colors\n\n      };\n\n      if (word.search(new RegExp('red', 'i')) != -1) {\n        style.background = \"rgb(255,0,0,0.5)\";\n      }\n\n      if (word.search(new RegExp('yellow', 'i')) != -1) {\n        style.background = \"rgb(255,255,0,0.5)\";\n      }\n\n      if (word.search(new RegExp('blue', 'i')) != -1) {\n        style.background = \"rgb(0,0,255,0.5)\";\n      }\n\n      if (word.search(new RegExp('green', 'i')) != -1) {\n        style.background = \"rgb(0,255,0,0.5)\";\n      }\n\n      if (word.search(new RegExp('purple', 'i')) != -1) {\n        style.background = \"rgb(255,0,255,0.5)\";\n      } //friends & special people\n      //Hogwarts\n      //special words with heavy connotation\n\n\n      return React.createElement(\"div\", {\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //CHANGE: ONLY RENDER BOX WHEN THERE IS A NEW WORD (WITH SPACE)\n      return React.createElement(\"div\", {\n        className: \"canvas\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"canvas-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Start typing and see what happens...\")), React.createElement(\"textarea\", {\n        type: \"text\",\n        name: \"txt\",\n        className: \"canvas-input\",\n        value: this.state.text,\n        onChange: this.handleChange,\n        placeholder: \"\",\n        rows: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), this.renderBox(this.state.word), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"word-count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Word Count: \", 1000 - this.state.text.length)));\n    }\n    /*\n    {this.state.colors.map(function(color) {\n      return <div> {color}</div>\n    }\n    )}\n    */\n\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/rebecca/Desktop/Interactive Art/responsive-art-canvas/src/App.js"],"names":["React","App","props","handleChange","e","name","target","value","setState","text","ch","charAt","length","w","state","word","display","top","Math","random","left","width","height","bind","style","position","search","RegExp","background","renderBox","Component"],"mappings":"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","sourcesContent":["import React  from 'react';\nimport './App.css';\n\nclass App extends React.Component{\n    constructor(props){\n        super(props)\n        this.state={\n            text:'',\n            word:'',\n            display: false,\n            //colors: Array(1000).fill(null),\n            //counter: 0,\n            top: 0,\n            left: 0\n        }\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleChange = (e) => {\n        var name = e.target.value\n        this.setState({text:name})\n        var ch = name.charAt(name.length-1)\n        var w = this.state.word\n        if (ch == ' ') {\n          /*\n          this.setState((prevState)=>{\n            return {\n              colors: [...prevState, w]\n            }\n          })\n          */\n          this.setState({display:true})\n          var top = Math.random(0,1) * 600;\n          var left = Math.random(0,1) * 500;\n          var width= Math.random(0,1) * 600;\n          var height= Math.random(0,1) * 1000;\n          this.setState({top:top,left:left,width: width, height:height, word:''})\n        } else {\n          w += ch\n          this.setState({word: w});\n        }\n\n        //need to make sure that everything stays on the screen without scrolling down\n    }\n\n   renderBox(word){\n     var style = {\n      position:\"absolute\",\n      width: `${this.state.width}px`,\n      height: `${this.state.height}px`,\n      top:`${this.state.top}px`,\n      left:`${this.state.left}px`\n     }\n     //actual colors\n     if(word.search(new RegExp('red', 'i')) != -1){\n       style.background = `rgb(255,0,0,0.5)`;\n     }\n     if(word.search(new RegExp('yellow', 'i')) != -1){\n       style.background = `rgb(255,255,0,0.5)`;\n     }\n     if(word.search(new RegExp('blue', 'i')) != -1){\n       style.background = `rgb(0,0,255,0.5)`;\n     }\n     if(word.search(new RegExp('green', 'i')) != -1){\n       style.background = `rgb(0,255,0,0.5)`;\n     }\n     if(word.search(new RegExp('purple', 'i')) != -1){\n       style.background = `rgb(255,0,255,0.5)`;\n     }\n\n     //friends & special people\n\n     //Hogwarts\n\n     //special words with heavy connotation\n     return <div style={style}></div>\n   }\n\n    render(){\n        //CHANGE: ONLY RENDER BOX WHEN THERE IS A NEW WORD (WITH SPACE)\n        return <div className='canvas'>\n            <div><label className='canvas-label'>Start typing and see what happens...</label></div>\n            <textarea type='text'name='txt' className='canvas-input' value={this.state.text}\n            onChange={this.handleChange} placeholder='' rows='5'/>\n              {this.renderBox(this.state.word)}\n\n            <div><label className='word-count'>Word Count: {1000-this.state.text.length}</label></div>\n        </div>\n    }\n    /*\n    {this.state.colors.map(function(color) {\n      return <div> {color}</div>\n    }\n    )}\n  */\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}