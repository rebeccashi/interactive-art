{"ast":null,"code":"import _classCallCheck from \"/Users/rebecca/Desktop/art2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rebecca/Desktop/art2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rebecca/Desktop/art2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rebecca/Desktop/art2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rebecca/Desktop/art2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/rebecca/Desktop/art2/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/rebecca/Desktop/art2/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Canvas from './Canvas.js'; //Debugging: why doesn't setState work for Generators?\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.valuesGenerator = function (num) {\n      var t = [];\n      var l = [];\n      var w = [];\n      var h = [];\n\n      for (var i = 0; i < num; i++) {\n        var random = Math.floor(Math.random(0, 1) * 4);\n\n        if (random === 0) {\n          var width = Math.random(0, 1) * 100;\n          var height = Math.random(0, 1) * 1200;\n          var top = Math.random(0, 1) * 700;\n          var left = Math.random(0, 1) * 1000;\n        }\n\n        if (random === 1) {\n          var width = Math.random(0, 1) * 1000;\n          var height = Math.random(0, 1) * 300;\n          var top = Math.random(0, 1) * 500;\n          var left = Math.random(0, 1) * 300;\n        }\n\n        if (random === 2) {\n          var width = Math.random(0, 1) * 500;\n          var height = Math.random(0, 1) * 1000;\n          var top = 800 - Math.random(0, 1) * 200;\n          var left = 1280 - Math.random(0, 1) * 400;\n        }\n\n        if (random == 3) {\n          var width = Math.random(0, 1) * 600;\n          var height = Math.random(0, 1) * 50;\n          var top = 800 - Math.random(0, 1) * 500;\n          var left = 1280 - Math.random(0, 1) * 600;\n        }\n\n        t.push(top);\n        l.push(left);\n        w.push(width);\n        h.push(height);\n      }\n\n      _this.setState({\n        tops: t\n      }); //alert(this.state.tops.length);\n\n\n      _this.setState({\n        lefts: l\n      }); //alert(this.state.lefts.length);\n\n\n      _this.setState({\n        widths: w\n      });\n\n      _this.setState({\n        heights: h\n      });\n    };\n\n    _this.opacitiesGenerator = function (num) {\n      var o = [];\n\n      for (var i = 0; i < num; i++) {\n        var random = 0.2 + Math.random(1) * 0.8;\n        o.push(random);\n      } //alert(o.length);\n\n\n      _this.setState({\n        opacities: o\n      }); //alert(this.state.opacities.length);\n\n    };\n\n    _this.textChangeHandler = function (e) {\n      var text = e.target.value;\n\n      _this.setState({\n        text: text\n      }); //reconstruct the libary of words\n\n\n      var words = [];\n      var word = '';\n\n      for (var i = 0; i < text.length; i++) {\n        var ch = text.charAt(i);\n        var nextCh = text.charAt(i + 1);\n\n        if (ch !== ' ') {\n          word += ch;\n        } else if (ch === ' ' && nextCh !== ' ') {\n          words.push(word);\n          word = '';\n        }\n      } //bug: continuous spaces produce a period for some reason\n\n\n      _this.setState({\n        words: words\n      }); //find the new corresponding colors\n\n\n      _this.findColors();\n    };\n\n    _this.findColors = function () {\n      var displayedColors = [];\n      var colorLib = _this.state.colorLib;\n      var found = false; //go through the words array, push the corresponding color to each word to displayedColors\n      //map function\n\n      _this.state.words.map(function (word, index) {\n        var j = 0; //keeps track of the index of displayedColors\n\n        for (var i = 0; i < colorLib.length && !found; i++) {\n          if (word === colorLib[i].word) {\n            found = true;\n            var color = \"rgb(\".concat(colorLib[i].r, \", \").concat(colorLib[i].g, \", \").concat(colorLib[i].b, \", \");\n\n            if (colorLib[i].t === 1) {\n              color += \"1)\";\n            } else {\n              color += \"\".concat(_this.state.opacities[j], \")\");\n              j++;\n            }\n\n            displayedColors.push(color);\n          }\n        }\n      });\n\n      _this.setState({\n        displayedColors: displayedColors\n      });\n\n      console.log(_this.state);\n    };\n\n    _this.state = {\n      text: '',\n      words: [],\n      colorLib: [//{word: '', r: , g: , b: , t: }\n      {\n        word: 'red',\n        r: 255,\n        g: 0,\n        b: 0,\n        o: 1\n      }, {\n        word: 'yellow',\n        r: 255,\n        g: 255,\n        b: 0,\n        o: 1\n      }, {\n        word: 'blue',\n        r: 0,\n        g: 0,\n        b: 0,\n        o: 1\n      }, {\n        word: 'green',\n        r: 0,\n        g: 255,\n        b: 0,\n        o: 1\n      }, {\n        word: 'purple',\n        r: 255,\n        g: 0,\n        b: 255,\n        o: 1\n      }],\n      displayedColors: [],\n\n      /*\n      box:[\n        {\n          top:l\n        }\n      ]\n      generate new object and push it into box\n      */\n      tops: [],\n      lefts: [],\n      widths: [],\n      heights: [],\n      opacities: []\n    };\n    _this.textChangeHandler = _this.textChangeHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    _this.valuesGenerator(1000);\n\n    _this.opacitiesGenerator(1000);\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var colors = this.state.displayedColors.map(function (color, index) {\n        return React.createElement(Canvas, {\n          color: color,\n          top: _this2.state.tops[index],\n          left: _this2.state.lefts[index],\n          width: _this2.state.widths[index],\n          heights: _this2.state.heights[index],\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        className: \"canvas\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"canvas-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Start typing and see what happens...\")), React.createElement(\"textarea\", {\n        type: \"text\",\n        name: \"txt\",\n        className: \"canvas-input\",\n        value: this.state.text,\n        onChange: this.textChangeHandler,\n        placeholder: \"\",\n        rows: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"word-count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Word Count: \", this.state.words.length)), colors);\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App; //both versions produce errors\n\n/*\nlet colors = null;\n  colors = (\n    <div>\n      {this.state.displayedColors.map((color, index) => {\n        return <Canvas\n          key={index}\n          color = {color}\n          top = {this.state.tops[index]}\n          left = {this.state.lefts[index]} />\n      })}\n    </div>\n  );\n*/\n\n/*{this.state.colors.map((color,key) => {\n  return <div key={key} style={color}></div>\n})}\n*/\n\n/*\n  topsGenerator = (num) => {\n    var tops = [];\n    for (int i = 0; i < num; i++) {\n        var random = Math.floor(Math.random(0,1) * 4);\n        var top;\n        if (random === 0)\n          top = Math.random(0,1) * 700\n        if (random === 1)\n          top = Math.random(0.1) * 500;\n        if (random === 2)\n          top = 800 - Math.random(0,1) * 200;\n        if (random == 3)\n          top = 800 - Math.random(0,1) * 500;\n        tops.push(top);\n    }\n    return tops;\n  }\n  */","map":{"version":3,"sources":["/Users/rebecca/Desktop/art2/src/App.js"],"names":["React","Component","Canvas","App","props","valuesGenerator","num","t","l","w","h","i","random","Math","floor","width","height","top","left","push","setState","tops","lefts","widths","heights","opacitiesGenerator","o","opacities","textChangeHandler","e","text","target","value","words","word","length","ch","charAt","nextCh","findColors","displayedColors","colorLib","state","found","map","index","j","color","r","g","b","console","log","bind","colors"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Canvas from './Canvas.js'\n\n//Debugging: why doesn't setState work for Generators?\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n      words: [],\n      colorLib: [\n        //{word: '', r: , g: , b: , t: }\n        {word: 'red', r: 255, g: 0, b: 0, o: 1},\n        {word: 'yellow', r: 255, g: 255, b: 0, o: 1},\n        {word: 'blue', r: 0, g: 0, b: 0, o: 1},\n        {word: 'green', r: 0, g: 255, b: 0, o: 1},\n        {word: 'purple', r: 255, g: 0, b: 255, o: 1}\n      ],\n      displayedColors: [],\n      /*\n      box:[\n        {\n          top:l\n        }\n      ]\n      generate new object and push it into box\n      */\n      tops: [],\n      lefts: [],\n      widths: [],\n      heights: [],\n      opacities: []\n    };\n    this.textChangeHandler = this.textChangeHandler.bind(this);\n    this.valuesGenerator(1000);\n    this.opacitiesGenerator(1000);\n  }\n\n  valuesGenerator = (num) => {\n    var t = [];\n    var l = [];\n    var w = [];\n    var h = [];\n    for (var i = 0; i < num; i++) {\n      var random = Math.floor(Math.random(0,1) * 4);\n      if (random === 0) {\n        var width= Math.random(0,1) * 100;\n        var height= Math.random(0,1) * 1200;\n        var top = Math.random(0,1) * 700;\n        var left = Math.random(0,1) * 1000;\n      }\n      if (random === 1) {\n        var width= Math.random(0,1) * 1000;\n        var height= Math.random(0,1) * 300;\n        var top = Math.random(0,1) * 500;\n        var left = Math.random(0,1) * 300;\n      }\n      if (random === 2) {\n        var width= Math.random(0,1) * 500;\n        var height= Math.random(0,1) * 1000;\n        var top = 800 - Math.random(0,1) * 200;\n        var left = 1280 - Math.random(0,1) * 400;\n      }\n      if (random == 3) {\n        var width= Math.random(0,1) * 600;\n        var height= Math.random(0,1) * 50;\n        var top = 800 - Math.random(0,1) * 500;\n        var left = 1280- Math.random(0,1) * 600;\n      }\n      t.push(top);\n      l.push(left);\n      w.push(width);\n      h.push(height);\n    }\n    this.setState({tops: t});\n    //alert(this.state.tops.length);\n    this.setState({lefts: l});\n    //alert(this.state.lefts.length);\n    this.setState({widths: w});\n    this.setState({heights: h});\n  }\n\n  opacitiesGenerator = (num) => {\n    var o = [];\n    for (var i = 0; i < num; i++) {\n      var random = 0.2 + Math.random(1) * 0.8;\n      o.push(random);\n    }\n    //alert(o.length);\n    this.setState({opacities: o});\n    //alert(this.state.opacities.length);\n  }\n\n  textChangeHandler = (e) => {\n    var text = e.target.value;\n    this.setState({text: text});\n    //reconstruct the libary of words\n    var words = [];\n    var word = '';\n    for (var i = 0; i < text.length; i++) {\n      var ch = text.charAt(i);\n      var nextCh = text.charAt(i + 1);\n      if (ch !== ' ') {\n        word += ch;\n      } else if (ch === ' ' && nextCh !== ' ') {\n        words.push(word);\n        word = '';\n      }\n    }\n    //bug: continuous spaces produce a period for some reason\n    this.setState({words: words});\n    //find the new corresponding colors\n    this.findColors();\n  }\n\n  findColors = () => {\n    let displayedColors = [];\n    const colorLib = this.state.colorLib;\n    let found = false;\n    //go through the words array, push the corresponding color to each word to displayedColors\n    //map function\n    this.state.words.map((word, index) => {\n      var j = 0;  //keeps track of the index of displayedColors\n      for (var i = 0; i < colorLib.length && !found; i++) {\n        if (word === colorLib[i].word) {\n          found = true;\n          let color =  `rgb(${colorLib[i].r}, ${colorLib[i].g}, ${colorLib[i].b}, `;\n          if (colorLib[i].t === 1) {\n            color += \"1)\"\n          } else {\n            color += `${this.state.opacities[j]})`;\n            j++;\n          }\n          displayedColors.push(color);\n        }\n      }\n    });\n\n    this.setState({displayedColors: displayedColors});\n    console.log(this.state)\n  }\n\n  render(){\n    const colors = this.state.displayedColors.map((color, index) => {\n      return <Canvas\n        color = {color}\n        top = {this.state.tops[index]}\n        left = {this.state.lefts[index]}\n        width = {this.state.widths[index]}\n        heights = {this.state.heights[index]}\n        key={index} />\n    });\n\n    return (\n      <div className = \"canvas\">\n\n        <div>\n          <label className='canvas-label'>\n            Start typing and see what happens...\n          </label>\n        </div>\n\n        <textarea\n          type='text'\n          name='txt'\n          className='canvas-input'\n          value={this.state.text}\n          onChange={this.textChangeHandler}\n          placeholder=''\n          rows='5'\n        />\n\n        <div>\n          <label className='word-count'>\n            Word Count: {this.state.words.length}\n          </label>\n        </div>\n        {colors}\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n    //both versions produce errors\n    /*\n    let colors = null;\n      colors = (\n        <div>\n          {this.state.displayedColors.map((color, index) => {\n            return <Canvas\n              key={index}\n              color = {color}\n              top = {this.state.tops[index]}\n              left = {this.state.lefts[index]} />\n          })}\n        </div>\n      );\n    */\n\n/*{this.state.colors.map((color,key) => {\n  return <div key={key} style={color}></div>\n})}\n*/\n/*\n  topsGenerator = (num) => {\n    var tops = [];\n    for (int i = 0; i < num; i++) {\n        var random = Math.floor(Math.random(0,1) * 4);\n        var top;\n        if (random === 0)\n          top = Math.random(0,1) * 700\n        if (random === 1)\n          top = Math.random(0.1) * 500;\n        if (random === 2)\n          top = 800 - Math.random(0,1) * 200;\n        if (random == 3)\n          top = 800 - Math.random(0,1) * 500;\n        tops.push(top);\n    }\n    return tops;\n  }\n  */\n"]},"metadata":{},"sourceType":"module"}