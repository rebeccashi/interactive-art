{"ast":null,"code":"import _classCallCheck from \"/Users/rebecca/Desktop/art2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rebecca/Desktop/art2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rebecca/Desktop/art2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rebecca/Desktop/art2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rebecca/Desktop/art2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/rebecca/Desktop/art2/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/rebecca/Desktop/art2/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Canvas from './Canvas.js';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.valuesGenerator = function (num) {\n      var t = [];\n      var l = [];\n      var w = [];\n      var h = [];\n\n      for (var i = 0; i < num; i++) {\n        var random = Math.floor(Math.random(0, 1) * 4);\n\n        if (random === 0) {\n          var width = Math.random(0, 1) * 100;\n          var height = Math.random(0, 1) * 1200;\n          var top = Math.random(0, 1) * 700;\n          var left = Math.random(0, 1) * 1000;\n        }\n\n        if (random === 1) {\n          var width = Math.random(0, 1) * 1000;\n          var height = Math.random(0, 1) * 300;\n          var top = Math.random(0, 1) * 500;\n          var left = Math.random(0, 1) * 300;\n        }\n\n        if (random === 2) {\n          var width = Math.random(0, 1) * 500;\n          var height = Math.random(0, 1) * 1000;\n          var top = 800 - Math.random(0, 1) * 200;\n          var left = 1280 - Math.random(0, 1) * 400;\n        }\n\n        if (random == 3) {\n          var width = Math.random(0, 1) * 600;\n          var height = Math.random(0, 1) * 50;\n          var top = 800 - Math.random(0, 1) * 500;\n          var left = 1280 - Math.random(0, 1) * 600;\n        }\n\n        t.push(top);\n        l.push(left);\n        w.push(width);\n        h.push(height);\n      }\n\n      _this.setState({\n        tops: t\n      });\n\n      alert(_this.state.tops.length);\n\n      _this.setState({\n        lefts: l\n      });\n\n      alert(_this.state.lefts.length);\n\n      _this.setState({\n        widths: w\n      });\n\n      _this.setState({\n        heights: h\n      });\n    };\n\n    _this.textChangeHandler = function (e) {\n      var text = e.target.value;\n\n      _this.setState({\n        text: text\n      }); //reconstruct the libary of words\n\n\n      var words = [];\n      var word = '';\n\n      for (var i = 0; i < text.length; i++) {\n        var ch = text.charAt(i);\n        var nextCh = text.charAt(i + 1);\n\n        if (ch !== ' ') {\n          word += ch;\n        } else if (ch === ' ' && nextCh !== ' ') {\n          words.push(word);\n          word = '';\n        }\n      } //bug: continuous spaces produce a period for some reason\n\n\n      _this.setState({\n        words: words\n      }); //find the new corresponding colors\n\n\n      _this.findColors();\n    };\n\n    _this.findColors = function () {\n      var displayedColors = [];\n      var colorLib = _this.state.colorLib;\n      var found = false; //go through the words array, push the corresponding color to each word to displayedColors\n      //map function\n\n      _this.state.words.map(function (word, index) {\n        for (var i = 0; i < colorLib.length && !found; i++) {\n          if (word === colorLib[i].word) {\n            found = true;\n            var color = \"rgb(\".concat(colorLib[i].r, \", \").concat(colorLib[i].g, \", \").concat(colorLib[i].b, \", \");\n\n            if (colorLib[i].t === 1) {\n              color += \"1)\";\n            } else {\n              color += \"\".concat(_this.state.opacities[index], \")\");\n            }\n\n            displayedColors.push(color);\n          }\n        }\n      });\n\n      _this.setState({\n        displayedColors: displayedColors\n      });\n    };\n\n    _this.state = {\n      text: '',\n      words: [],\n      colorLib: [//{word: '', r: , g: , b: , t: }\n      {\n        word: 'red',\n        r: 255,\n        g: 0,\n        b: 0,\n        o: 1\n      }, {\n        word: 'yellow',\n        r: 255,\n        g: 255,\n        b: 0,\n        o: 1\n      }, {\n        word: 'blue',\n        r: 0,\n        g: 0,\n        b: 0,\n        o: 1\n      }, {\n        word: 'green',\n        r: 0,\n        g: 255,\n        b: 0,\n        o: 1\n      }, {\n        word: 'purple',\n        r: 255,\n        g: 0,\n        b: 255,\n        o: 1\n      }],\n      displayedColors: [],\n      tops: [],\n      lefts: [],\n      widths: [],\n      heights: [],\n      opacities: ['1', '1', '1']\n    };\n    _this.textChangeHandler = _this.textChangeHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    _this.valuesGenerator(1000);\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var colors = this.state.displayedColors.map(function (color, index) {\n        return React.createElement(Canvas, {\n          color: color,\n          top: _this2.state.tops[index],\n          left: _this2.state.lefts[index],\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        });\n      }); //both versions produce errors\n\n      /*\n      let colors = null;\n        colors = (\n          <div>\n            {this.state.displayedColors.map((color, index) => {\n              return <Canvas\n                key={index}\n                color = {color}\n                top = {this.state.tops[index]}\n                left = {this.state.lefts[index]} />\n            })}\n          </div>\n        );\n      */\n\n      return React.createElement(\"div\", {\n        className: \"canvas\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"canvas-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"Start typing and see what happens...\")), React.createElement(\"textarea\", {\n        type: \"text\",\n        name: \"txt\",\n        className: \"canvas-input\",\n        value: this.state.text,\n        onChange: this.textChangeHandler,\n        placeholder: \"\",\n        rows: \"5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"word-count\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Word Count: \", this.state.words.length)), colors);\n    }\n  }]);\n\n  return App;\n}(Component);\n/*{this.state.colors.map((color,key) => {\n  return <div key={key} style={color}></div>\n})}\n*/\n\n\nexport default App;","map":{"version":3,"sources":["/Users/rebecca/Desktop/art2/src/App.js"],"names":["React","Component","Canvas","App","props","valuesGenerator","num","t","l","w","h","i","random","Math","floor","width","height","top","left","push","setState","tops","alert","state","length","lefts","widths","heights","textChangeHandler","e","text","target","value","words","word","ch","charAt","nextCh","findColors","displayedColors","colorLib","found","map","index","color","r","g","b","opacities","o","bind","colors"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Canvas from './Canvas.js'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n      words: [],\n      colorLib: [\n        //{word: '', r: , g: , b: , t: }\n        {word: 'red', r: 255, g: 0, b: 0, o: 1},\n        {word: 'yellow', r: 255, g: 255, b: 0, o: 1},\n        {word: 'blue', r: 0, g: 0, b: 0, o: 1},\n        {word: 'green', r: 0, g: 255, b: 0, o: 1},\n        {word: 'purple', r: 255, g: 0, b: 255, o: 1}\n      ],\n      displayedColors: [],\n      tops: [],\n      lefts: [],\n      widths: [],\n      heights: [],\n      opacities: ['1','1','1']\n    };\n    this.textChangeHandler = this.textChangeHandler.bind(this);\n    this.valuesGenerator(1000);\n  }\n\nvaluesGenerator = (num) => {\n  var t = [];\n  var l = [];\n  var w = [];\n  var h = [];\n  for (var i = 0; i < num; i++) {\n    var random = Math.floor(Math.random(0,1) * 4);\n    if (random === 0) {\n      var width= Math.random(0,1) * 100;\n      var height= Math.random(0,1) * 1200;\n      var top = Math.random(0,1) * 700;\n      var left = Math.random(0,1) * 1000;\n    }\n    if (random === 1) {\n      var width= Math.random(0,1) * 1000;\n      var height= Math.random(0,1) * 300;\n      var top = Math.random(0,1) * 500;\n      var left = Math.random(0,1) * 300;\n    }\n    if (random === 2) {\n      var width= Math.random(0,1) * 500;\n      var height= Math.random(0,1) * 1000;\n      var top = 800 - Math.random(0,1) * 200;\n      var left = 1280 - Math.random(0,1) * 400;\n    }\n    if (random == 3) {\n      var width= Math.random(0,1) * 600;\n      var height= Math.random(0,1) * 50;\n      var top = 800 - Math.random(0,1) * 500;\n      var left = 1280- Math.random(0,1) * 600;\n    }\n    t.push(top);\n    l.push(left);\n    w.push(width);\n    h.push(height);\n  }\n  this.setState({tops: t});\n  alert(this.state.tops.length);\n  this.setState({lefts: l});\n  alert(this.state.lefts.length);\n  this.setState({widths: w});\n  this.setState({heights: h});\n}\n/*\n  topsGenerator = (num) => {\n    var tops = [];\n    for (int i = 0; i < num; i++) {\n        var random = Math.floor(Math.random(0,1) * 4);\n        var top;\n        if (random === 0)\n          top = Math.random(0,1) * 700\n        if (random === 1)\n          top = Math.random(0.1) * 500;\n        if (random === 2)\n          top = 800 - Math.random(0,1) * 200;\n        if (random == 3)\n          top = 800 - Math.random(0,1) * 500;\n        tops.push(top);\n    }\n    return tops;\n  }\n  */\n\n  textChangeHandler = (e) => {\n    var text = e.target.value;\n    this.setState({text: text});\n    //reconstruct the libary of words\n    var words = [];\n    var word = '';\n    for (var i = 0; i < text.length; i++) {\n      var ch = text.charAt(i);\n      var nextCh = text.charAt(i + 1);\n      if (ch !== ' ') {\n        word += ch;\n      } else if (ch === ' ' && nextCh !== ' ') {\n        words.push(word);\n        word = '';\n      }\n    }\n    //bug: continuous spaces produce a period for some reason\n    this.setState({words: words});\n    //find the new corresponding colors\n    this.findColors();\n  }\n\n  findColors = () => {\n    let displayedColors = [];\n    const colorLib = this.state.colorLib;\n    let found = false;\n    //go through the words array, push the corresponding color to each word to displayedColors\n    //map function\n    this.state.words.map((word, index) => {\n      for (var i = 0; i < colorLib.length && !found; i++) {\n        if (word === colorLib[i].word) {\n          found = true;\n          let color =  `rgb(${colorLib[i].r}, ${colorLib[i].g}, ${colorLib[i].b}, `;\n          if (colorLib[i].t === 1) {\n            color += \"1)\"\n          } else {\n            color += `${this.state.opacities[index]})`\n          }\n          displayedColors.push(color);\n        }\n      }\n    });\n    this.setState({displayedColors: displayedColors});\n  }\n\n  render(){\n    const colors = this.state.displayedColors.map((color, index) => {\n      return <Canvas\n        color = {color}\n        top = {this.state.tops[index]}\n        left = {this.state.lefts[index]}\n        key={index} />\n    });\n\n    //both versions produce errors\n    /*\n    let colors = null;\n      colors = (\n        <div>\n          {this.state.displayedColors.map((color, index) => {\n            return <Canvas\n              key={index}\n              color = {color}\n              top = {this.state.tops[index]}\n              left = {this.state.lefts[index]} />\n          })}\n        </div>\n      );\n    */\n\n    return (\n      <div className = \"canvas\">\n        <div><label className='canvas-label'>Start typing and see what happens...</label></div>\n        <textarea type='text'name='txt' className='canvas-input' value={this.state.text}\n        onChange={this.textChangeHandler} placeholder='' rows='5'/>\n        <div><label className='word-count'>Word Count: {this.state.words.length}</label></div>\n        {colors}\n      </div>\n    );\n  }\n}\n\n/*{this.state.colors.map((color,key) => {\n  return <div key={key} style={color}></div>\n})}\n*/\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}